true: debug, rectypes, color(auto), bin_annot, keep_asm
true: short_paths

#<ppx/*>:
<ppx/*.ml>: package(ppxlib)
<ppx/ppx_fresh*> or <ppx/smart*>: package(ppxlib.metaquot), linkall
<ppx/ppx_repr.*>: linkall

#<ppx/ppx_smart_logger.native>: make_pp_smart_logger
<ppx/ppx_fresh_bin.native>:    make_pp_fresh
<ppx/ppx_repr_bin.native>:     make_pp_repr
<ppx/ppx_ocanren_all.native>:  make_pp_ocanren

<samples>: not_hygienic
<camlp5/pa_minikanren.*>: syntax(camlp5o), package(camlp5)

#<src/MiniKanrenCore.ml>: use_time_log
<src/MiniKanrenCore*.*> or <src/MiniKanrenStd*.*>: opaque
<src/MiniKanrenCore*.*>: package(GT.ppx),predicate(ppxdriver), package(ppxlib.metaquot)
<src/MiniKanrenS*.*>: package(unix),syntax(camlp5o),package(GT,GT.syntax.all),package(logger.syntax)
<src/*.ml*>: package(GT)

<regression/orig/*>: traverse
<regression/test*.native> or <regression/test*.byte>: package(unix),package(str)
<regression/stlc.*>: syntax(camlp5o), package(GT.syntax.all)

<regression/test0*.*>: package(GT,GT.syntax.all), syntax(camlp5o)

<regression/test*.ml> : syntax(camlp5o), package(logger.syntax)
<regression/test0*.ml> : use_pa_minikanren, package(GT.syntax.all)

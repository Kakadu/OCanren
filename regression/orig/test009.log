`pExpr (of_list [Id])`, 1 answer {
q=I;
}
`pExpr (of_list [Id; Mul; Id])`, 1 answer {
q=M (I, I);
}
`pExpr (of_list [Id; Mul; Id; Mul; Id])`, 1 answer {
q=M (I, M (I, I));
}
`pExpr (of_list [Id; Mul; Id; Add; Id])`, 1 answer {
q=A (M (I, I), I);
}
`pExpr (of_list [Id; Add; Id; Mul; Id])`, 1 answer {
q=A (I, M (I, I));
}
`pExpr (of_list [Id; Add; Id; Add; Id])`, 1 answer {
q=A (I, A (I, I));
}
`fun q  -> pExpr q (!(M ((!I), (!I))))`, 1 answer {
q=Id :: Mul :: [Id];
}

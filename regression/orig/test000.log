`fives`, 1 answer {
q=5;
}
`a_and_b`, 1 answer {
q=7;
}
`a_and_b'`, 2 answers {
q=6;
q=5;
}
`fun q  -> appendo q (of_list [3; 4]) (of_list [1; 2; 3; 4])`, 1 answer {
q=1 :: 2 :: [];
}
`fun q  -> fun r  -> appendo q (of_list ([] : int list)) r`, 4 answers {
q=[]; _.10=[];
q=_.12 :: []; _.10=_.12 :: [];
q=_.12 :: _.15 :: []; _.10=_.12 :: _.15 :: [];
q=_.12 :: _.15 :: _.18 :: []; _.10=_.12 :: _.15 :: _.18 :: [];
}
`fun q  -> reverso q (of_list [1; 2; 3; 4])`, 1 answer {
q=4 :: 3 :: 2 :: 1 :: [];
}
`fun q  -> reverso (of_list [1; 2; 3; 4]) q`, 1 answer {
q=4 :: 3 :: 2 :: [1];
}
`fun q  -> reverso (of_list ([] : int list)) (of_list ([] : int list))`, 1 answer {
q=_.10;
}
`fun q  -> reverso q q`, 1 answer {
q=[];
}
`fun q  -> reverso q q`, 2 answers {
q=[];
q=_.11 :: [];
}
`fun q  -> reverso q q`, 10 answers {
q=[];
q=_.11 :: [];
q=_.17 :: [_.17];
q=_.26 :: _.20 :: [_.26];
q=_.38 :: _.32 :: _.32 :: [_.38];
q=_.53 :: _.47 :: _.38 :: _.47 :: [_.53];
q=_.71 :: _.65 :: _.56 :: _.56 :: _.65 :: [_.71];
q=_.92 :: _.86 :: _.77 :: _.65 :: _.77 :: _.86 :: [_.92];
q=_.116 :: _.110 :: _.101 :: _.89 :: _.89 :: _.101 :: _.110 :: [_.116];
q=_.143 :: _.137 :: _.128 :: _.116 :: _.101 :: _.116 :: _.128 :: _.137 :: [_.143];
}
`fun q  -> reverso q (of_list [1])`, 2 answers {
q=1 :: [];
}
`fun q  -> reverso (of_list [1]) q`, 1 answer {
q=[1];
}
